name: CI Pipeline

on: 
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true # 自动取消重复运行

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      GO_ENV: production
      CGO_ENABLED: 0
    
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.x

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            **/go.sum
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: |
            ui/node_modules
            **/yarn.lock
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        run: |
          go mod download
          (cd ui && yarn --frozen-lockfile)

      - name: Build frontend
        run: |
          (cd ui && yarn build)
          (cd ui && yarn testformat)

      - name: Lint code
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.60.3

      - name: Build and test
        run: |
          go build ./...
          go test -race -coverprofile=coverage.txt ./...
          go tool cover -func=coverage.txt

      - name: Publish Docker image
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          echo "$DOCKER_PASS" | docker login --username "$DOCKER_USER" --password-stdin
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io --username "${{ github.actor }}" --password-stdin
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_PASS: ${{ secrets.DOCKER_PASS }}

      - name: Release with GoReleaser
        if: startsWith(github.ref, 'refs/tags/v')
        uses: goreleaser/goreleaser-action@v5
        with:
          version: 1.22.1
          args: release --skip-validate
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
